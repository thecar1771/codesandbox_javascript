{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/project/codesandbox_javascript/index.html","resolved":"/project/codesandbox_javascript/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/project/codesandbox_javascript/package.json","includedInParent":true,"mtime":1690857412009}],"generated":{"html":"<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <style>\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <form id=\"start-screen\" style=\"display:block\">\r\n      <input id=\"name-input\" placeholder=\"주인공 이름을 입력하세요!\">\r\n      <button id=\"start\">시작</button>\r\n    </form>\r\n    <div>\r\n      <div id=\"hero-stat\">\r\n        <span id=\"hero-name\"></span>\r\n        <span id=\"hero-level\"></span>\r\n        <span id=\"hero-hp\"></span>\r\n        <span id=\"hero-xp\"></span>\r\n        <span id=\"hero-att\"></span>\r\n      </div>\r\n      <form id=\"game-menu\" style=\"display: none;\">\r\n        <div id=\"menu-1\">1.모형</div>\r\n        <div id=\"menu-2\">2.휴식</div>\r\n        <div id=\"menu-3\">3.종료</div>\r\n        <input id=\"menu-input\">\r\n        <button id=\"menu-button\">입력</button>\r\n      </form>\r\n      <form id=\"battle-menu\" style=\"display: none;\">\r\n        <div id=\"battle-1\">1.공격</div>\r\n        <div id=\"battle-2\">2.회복</div>\r\n        <div id=\"battle-3\">3.도망</div>\r\n        <input id=\"battle-input\">\r\n        <button id=\"battle-button\">입력</button>\r\n      </form>\r\n      <div id=\"message\"></div>\r\n      <div id=\"monster-stat\">\r\n        <span id=\"monster-name\"></span>\r\n        <span id=\"monster-hp\"></span>\r\n        <span id=\"monster-att\"></span>\r\n      </div>\r\n    </div>\r\n    <script>function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n//화면 목록 \nvar $startScreen = document.querySelector('#start-screen');\nvar $gameMenu = document.querySelector('#game-menu');\nvar $battleMenu = document.querySelector('#battle-menu');\n\n//주인공 정보 \nvar $heroName = document.querySelector('#hero-name');\nvar $heroLevel = document.querySelector('#hero-level');\nvar $heroHp = document.querySelector('#hero-hp');\nvar $heroXp = document.querySelector('#hero-xp');\nvar $heroAtt = document.querySelector('#hero-att');\n\n//몬스터 정보\nvar $monsterName = document.querySelector('#monster-name');\nvar $monsterHp = document.querySelector('#monster-hp');\nvar $monsterAtt = document.querySelector('#monster-att');\nvar Game = /*#__PURE__*/function () {\n  function Game(name) {\n    var _this = this;\n    _classCallCheck(this, Game);\n    _defineProperty(this, \"onGameMenuInput\", function (event) {\n      event.preventDefault();\n      var input = event.target['menu-input'].value;\n      if (input === '1') {\n        // 모험\n        _this.changeScreen('battle');\n      } else if (input === '2') {// 휴식\n      } else if (input === '3') {// 종료\n      }\n    });\n    _defineProperty(this, \"onBattleMenuInput\", function (event) {\n      event.preventDefault();\n      var input = event.target['battle-input'].value;\n      if (input === '1') {} else if (input === '2') {} else if (input === '3') {}\n    });\n    this.monster = null;\n    this.hero = new Hero(this, name);\n    this.monsterList = [{\n      name: '슬라임',\n      hp: 25,\n      att: 10,\n      xp: 10\n    }, {\n      name: '스켈레톤',\n      hp: 50,\n      att: 15,\n      xp: 20\n    }, {\n      name: '마왕',\n      hp: 150,\n      att: 35,\n      xp: 50\n    }];\n    this.start();\n  }\n  _createClass(Game, [{\n    key: \"start\",\n    value: function start() {\n      $gameMenu.addEventListener('submit', this.onGameMenuInput);\n      $battleMenu.addEventListener('submit', this.onBattleMenuInput);\n      this.changeScreen('game');\n    }\n  }, {\n    key: \"changeScreen\",\n    value: function changeScreen(screen) {\n      if (screen === 'start') {\n        $startScreen.style.display = 'block';\n        $gameMenu.style.display = 'none';\n        $battleMenu.style.display = 'none';\n      } else if (screen === 'game') {\n        $startScreen.style.display = 'none';\n        $gameMenu.style.display = 'block';\n        $battleMenu.style.display = 'none';\n      } else if (screen === 'battle') {\n        $startScreen.style.display = 'none';\n        $gameMenu.style.display = 'none';\n        $battleMenu.style.display = 'block';\n      }\n    }\n  }]);\n  return Game;\n}();\n;\nvar Monster = /*#__PURE__*/_createClass(function Monster(name, hp, att, xp) {\n  _classCallCheck(this, Monster);\n  this.name = name;\n  this.hp = hp;\n  this.att = att;\n  this.xp = xp;\n});\nvar Hero = /*#__PURE__*/function () {\n  function Hero(game, name) {\n    _classCallCheck(this, Hero);\n    this.game = game;\n    this.name = name;\n    this.lev = 1;\n    this.maxHp = 100;\n    this.hp = 100;\n    this.xp = 0;\n    this.maxXp = 0;\n    this.att = 10.;\n  }\n  _createClass(Hero, [{\n    key: \"attack\",\n    value: function attack(monster) {\n      monster.hp -= this.att;\n      this.hp -= monster.attack;\n    }\n  }, {\n    key: \"heal\",\n    value: function heal(monster) {\n      this.hp += 20;\n      this.hp -= monster.attack;\n    }\n  }]);\n  return Hero;\n}();\n$startScreen.addEventListener('submit', function (event) {\n  event.preventDefault();\n  var name = event.target['name-input'].value;\n  game = new Game(name);\n});</script>\r\n  </body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"7a019ad082cc50049e452290f8ef3c10","cacheData":{"env":{}}}