{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"/project/codesandbox_javascript/index.html","resolved":"/project/codesandbox_javascript/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/project/codesandbox_javascript/package.json","includedInParent":true,"mtime":1690857412009}],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title></title>\r\n  <meta charset=\"utf-8\">\r\n  <style>table {\r\n      border-collapse: collapse;\r\n    }\r\n    td {\r\n      border : 1px solid #bbb;\r\n      text-align : center;\r\n      line-height : 20px;\r\n      width : 20px;\r\n      height : 20px;\r\n      background : #888;\r\n    }\r\n    td.opened { background: white;}\r\n    td.flag { background : red;}\r\n    td.quetion { background : orange; }</style>\r\n</head>\r\n<body>\r\n<table id=\"table\">\r\n  <tbody>\r\n  </tbody>\r\n</table>\r\n<div id=\"result\"></div>\r\n\r\n<script>var $tbody = document.querySelector('#table>tbody');\nvar $result = document.querySelector('#result');\nvar row = 10; // \nvar cell = 10;\nvar mine = 10;\nvar CODE = {\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  MINE: -6,\n  OPENED: 0\n};\nvar data;\nfunction plantMine() {\n  //테이블 판 생성\n  var candidate = Array(row * cell).fill().map(function (arr, i) {\n    return i;\n  });\n  var shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    var chosen = candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0];\n    shuffle.push(chosen);\n  }\n  var data = [];\n  for (var i = 0; i < row; ++i) {\n    var rowData = [];\n    data.push(rowData);\n    for (var j = 0; j < cell; ++j) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  //shuffle = [85,19,9]\n  for (var k = 0; k < shuffle.length; ++k) {\n    var ver = Math.floor(shuffle[k] / cell);\n    var hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n  return data;\n}\nfunction countMine(rowIndex, cellIndex) {\n  var mineCount = 0;\n  var aroundArray = data.slice(rowIndex - 1 < 0 ? 0 : rowIndex - 1, rowIndex + 2);\n  aroundArray.forEach(function (array, index, _) {\n    mineCount += array.slice(cellIndex - 1 < 0 ? 0 : cellIndex - 1, cellIndex + 2).filter(function (v) {\n      return v === CODE.MINE;\n    }).length;\n  });\n\n  //const firstRowMine = aroundArray[0].slice(cellIndex-1,cellIndex+2).filter((v) => v === CODE.MINE).length;\n  //const secondRowMine = aroundArray[1].slice(cellIndex-1,cellIndex+2).filter((v) => v === CODE.MINE).length;\n  //const thirdRowMine = aroundArray[2].slice(cellIndex-1,cellIndex+2).filter((v) => v === CODE.MINE).length;\n\n  return mineCount;\n}\nfunction onLeftClick(event) {\n  event.preventDefault();\n  var target = event.target;\n  var rowIndex = target.parentNode.rowIndex;\n  var cellIndex = target.cellIndex;\n  var cellData = data[rowIndex][cellIndex];\n  if (cellData === CODE.NORMAL) {\n    var count = countMine(rowIndex, cellIndex);\n    target.textContent = count || '';\n    target.className = 'opened';\n  } else if (cellData === CODE.MINE) {}\n}\nfunction onRightClick(event) {\n  event.preventDefault();\n  var target = event.target;\n  var rowIndex = target.parentNode.rowIndex; // tr\n  var cellIndex = target.cellIndex; //td\n  var cellData = data[rowIndex][cellIndex];\n\n  /*\r\n  const CODE = {\r\n    NORMAL : -1,\r\n    QUESTION : -2,\r\n    FLAG : -3,\r\n    QUESTION_MINE : -4,\r\n    FLAG_MINE : -5,\r\n    MINE: -6,\r\n    OPENED : 0,\r\n  }\r\n  */\n  switch (cellData) {\n    //지뢰 일 경우 깃발 구분\n    case CODE.MINE:\n      // 지뢰면\n      data[rowIndex][cellIndex] = CODE.QUESTION_MINE; // 물음표 지뢰로\n      target.className = 'quetion';\n      target.textContent = '?';\n      break;\n    case CODE.QUESTION_MINE:\n      // 물음표 지뢰면\n      data[rowIndex][cellIndex] = CODE.FLAG_MINE; // 깃발 지뢰로\n      target.className = 'flag';\n      target.textContent = '!';\n      break;\n    case CODE.FLAG_MINE:\n      // 깃발 지뢰면  \n      data[rowIndex][cellIndex] = CODE.MINE;\n      target.className = '';\n      target.textContent = 'X';\n      break;\n\n    //지뢰가 아닐 경우 깃발 구분 \n    case CODE.NORMAL:\n      // 지뢰 아니면\n      data[rowIndex][cellIndex] = CODE.QUESTION; // 물음표 지뢰로\n      target.className = 'quetion';\n      target.textContent = '?';\n      break;\n    case CODE.QUESTION:\n      // 물음표 지뢰 아니면\n      data[rowIndex][cellIndex] = CODE.FLAG; // 깃발 지뢰로\n      target.className = 'flag';\n      target.textContent = '!';\n      break;\n    case CODE.FLAG:\n      // 깃발 지뢰 아니면\n      data[rowIndex][cellIndex] = CODE.NORMAL;\n      target.className = '';\n      target.textContent = '';\n      break;\n  }\n}\nfunction drawTable() {\n  data = plantMine();\n  data.forEach(function (rows) {\n    var $tr = document.createElement('tr');\n    rows.forEach(function (cell) {\n      var $td = document.createElement('td');\n      if (cell === CODE.MINE) {\n        $td.textContent = 'X';\n      } else {\n        //$td.textContent = '0'; \n      }\n      $tr.append($td);\n    });\n    $tbody.append($tr);\n    $tbody.addEventListener('contextmenu', onRightClick);\n    $tbody.addEventListener('click', onLeftClick);\n  });\n}\ndrawTable();</script>\r\n</body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"4a7bfa6f604e721aa4c75b48c97d41ac","cacheData":{"env":{}}}